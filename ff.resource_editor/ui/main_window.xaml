<Window
    x:Class="ff.resource_editor.ui.main_window"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:convert="clr-namespace:ff.resource_editor.converters"
    xmlns:model="clr-namespace:ff.resource_editor.model"
    xmlns:ui="clr-namespace:ff.resource_editor.ui"
    d:DataContext="{d:DesignInstance Type=model:main_vm, IsDesignTimeCreatable=True}"
    DataContext="{Binding view_model, RelativeSource={RelativeSource Mode=Self}}"
    Closing="on_closing"
    Loaded="on_loaded"
    SnapsToDevicePixels="True"
    mc:Ignorable="d"
    d:Height="450"
    d:Width="800">
  <Window.Resources>
    <convert:window_title_converter x:Key="window_title_converter" />
    <convert:tab_title_converter x:Key="tab_title_converter" />

    <!-- Panel that owns all of the tab buttons and computes layout -->
    <ItemsPanelTemplate x:Key="TabItemsPanelTemplate">
      <TabPanel Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    </ItemsPanelTemplate>

    <!-- Simple look for the close button -->
    <ControlTemplate x:Key="TabCloseButtonTemplate" TargetType="{x:Type Button}">
      <Border x:Name="BorderBack" Background="{TemplateBinding Background}">
        <ContentPresenter Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" />
      </Border>
      <ControlTemplate.Triggers>
        <Trigger Property="IsMouseOver" Value="False">
          <Setter TargetName="BorderBack" Property="Background" Value="Transparent" />
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Title and close button -->
    <DataTemplate x:Key="TabButtonContentTemplate" DataType="{x:Type model:edit_tab}">
      <Grid x:Name="RootGrid">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" MinWidth="48" />
          <ColumnDefinition Width="16" />
        </Grid.ColumnDefinitions>
        <TextBlock
          Grid.Column="0"
          Margin="4"
          HorizontalAlignment="Center"
          VerticalAlignment="Center">
          <TextBlock.Text>
            <MultiBinding Converter="{StaticResource tab_title_converter}">
              <Binding />
              <Binding Path="tab_name" />
              <Binding Path="dirty" />
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
        <Button
          x:Name="CloseButton"
          Grid.Column="1"
          Width="16"
          Focusable="False"
          Background="#4FFF0000"
          Command="{Binding close_command}"
          Template="{StaticResource TabCloseButtonTemplate}"
          Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">
          <Path Data="M 0,0 L 8,8 M 0,8 L 8,0" StrokeThickness="1" Stroke="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
        </Button>
      </Grid>
      <DataTemplate.Triggers>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding active, Mode=OneWay}" Value="False" />
            <Condition Binding="{Binding IsMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Value="False" />
          </MultiDataTrigger.Conditions>
          <Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed" />
        </MultiDataTrigger>
        <DataTrigger Binding="{Binding active, Mode=OneWay}" Value="False">
          <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
        </DataTrigger>
      </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Look of the whole tab button -->
    <ControlTemplate x:Key="TabButtonTemplate" TargetType="{x:Type Button}">
      <Grid SnapsToDevicePixels="True">
        <Border x:Name="BorderBack" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
          <ContentPresenter Focusable="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
        </Border>
      </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="TabItemTemplate" DataType="{x:Type model:edit_tab}">
      <Button
        x:Name="RootButton"
        Selector.IsSelected="{Binding active, Mode=OneWay}"
        Command="{Binding activate_command}"
        MouseDown="OnTabButtonMouseDown"
        PreviewMouseMove="OnTabButtonMouseMoveEvent"
        GotMouseCapture="OnTabButtonMouseCaptureEvent"
        LostMouseCapture="OnTabButtonMouseCaptureEvent"
        Focusable="False"
        BorderThickness="1,1,1,0"
        BorderBrush="Transparent"
        Content="{Binding}"
        ToolTip="{Binding tab_tooltip}"
        Template="{StaticResource TabButtonTemplate}"
        ContentTemplate="{StaticResource TabButtonContentTemplate}"
        Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />

      <!-- Change colors for an active tab, the default colors are for inactive -->
      <DataTemplate.Triggers>
        <DataTrigger Binding="{Binding active}" Value="True">
          <Setter TargetName="RootButton" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
          <Setter TargetName="RootButton" Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
          <Setter TargetName="RootButton" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        </DataTrigger>
        <MultiDataTrigger>
          <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding active, Mode=OneWay}" Value="False" />
            <Condition Binding="{Binding IsMouseOver, ElementName=RootButton}" Value="True" />
          </MultiDataTrigger.Conditions>
          <Setter TargetName="RootButton" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
        </MultiDataTrigger>
      </DataTemplate.Triggers>
    </DataTemplate>

  </Window.Resources>

  <Window.Title>
    <MultiBinding Converter="{StaticResource window_title_converter}" ConverterParameter="Resource Editor">
      <Binding Path="project" />
      <Binding Path="project.file" />
      <Binding Path="project.dirty" />
    </MultiBinding>
  </Window.Title>

  <Window.InputBindings>
    <KeyBinding Key="F4" Modifiers="Ctrl" Command="{Binding close_active_tab_command}" />
  </Window.InputBindings>
  
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="400"/>
      <ColumnDefinition/>
    </Grid.ColumnDefinitions>
    <Grid Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="200"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <ToolBarTray>
        <ToolBar>
          <Button
            ToolTip="New project"
            Command="{Binding new_command}"
            Style="{StaticResource toolbar_button_style}"
            ui:properties.Icon="{StaticResource new_icon}"
            ui:properties.IconHot="{StaticResource new_icon_hot}"
            ui:properties.IconGray="{StaticResource new_icon_gray}" />

          <Button
            ToolTip="Open project"
            Command="{Binding open_command}"
            Style="{StaticResource toolbar_button_style}"
            ui:properties.Icon="{StaticResource open_icon}"
            ui:properties.IconHot="{StaticResource open_icon_hot}"
            ui:properties.IconGray="{StaticResource open_icon_gray}" />

          <Button
            ToolTip="Save project"
            Command="{Binding save_command}"
            Style="{StaticResource toolbar_button_style}"
            ui:properties.Icon="{StaticResource save_icon}"
            ui:properties.IconHot="{StaticResource save_icon_hot}"
            ui:properties.IconGray="{StaticResource save_icon_gray}" />

          <Button
            ToolTip="Save project as"
            Command="{Binding save_as_command}"
            Style="{StaticResource toolbar_button_style}"
            ui:properties.Icon="{StaticResource save_as_icon}"
            ui:properties.IconHot="{StaticResource save_as_icon_hot}"
            ui:properties.IconGray="{StaticResource save_as_icon_gray}" />

          <Separator/>

          <Button
            ToolTip="Add source file"
            Command="{Binding add_source_command}"
            Style="{StaticResource toolbar_button_style}"
            ui:properties.Icon="{StaticResource add_source_icon}"
            ui:properties.IconHot="{StaticResource add_source_icon_hot}"
            ui:properties.IconGray="{StaticResource add_source_icon_gray}" />

          <Button
            ToolTip="Remove source file"
            CommandParameter="{Binding edit_source}"
            Command="{Binding remove_source_command}"
            Style="{StaticResource toolbar_button_style}"
            ui:properties.Icon="{StaticResource remove_source_icon}"
            ui:properties.IconHot="{StaticResource remove_source_icon_hot}"
            ui:properties.IconGray="{StaticResource remove_source_icon_gray}" />

        </ToolBar>
      </ToolBarTray>

      <ListView x:Name="source_file_list" Grid.Row="1" Margin="4" ItemsSource="{Binding project.sources}" SelectedItem="{Binding edit_source}" SelectionMode="Single">
        <ListView.ItemContainerStyle>
          <Style TargetType="ListViewItem">
            <Setter Property="ToolTip" Value="{Binding file}" />
          </Style>
        </ListView.ItemContainerStyle>
        <ListView.View>
          <GridView AllowsColumnReorder="False">
            <GridViewColumn Header="Name" Width="125" DisplayMemberBinding="{Binding name}" />
            <GridViewColumn Header="Path" Width="250" DisplayMemberBinding="{Binding project_relative_file}" />
          </GridView>
        </ListView.View>
      </ListView>

      <ToolBarTray Grid.Row="2">
        <ToolBar>
          <Button
            ToolTip="Add resource"
            Click="on_add_resource_click"
            ClickMode="Release"
            IsEnabled="{Binding has_edit_source}"
            Style="{StaticResource toolbar_button_style}"
            ui:properties.Icon="{StaticResource add_icon}"
            ui:properties.IconHot="{StaticResource add_icon_hot}"
            ui:properties.IconGray="{StaticResource add_icon_gray}">
            <Button.ContextMenu>
              <ContextMenu>
                <MenuItem Header="Localized values" />
                <MenuItem Header="Input mapping" />
                <Separator />
                <MenuItem Header="Shader" />
                <MenuItem Header="Texture" />
                <MenuItem Header="Palette" />
                <MenuItem Header="Sprites" />
                <MenuItem Header="Animation" />
                <MenuItem Header="Font file" />
                <MenuItem Header="Sprite font" />
                <Separator />
                <MenuItem Header="Effect" />
                <MenuItem Header="Music" />
                <Separator />
                <MenuItem Header="XAML file" />
                <MenuItem Header="XAML font file" />
                <Separator />
                <MenuItem Header="Other file" />
              </ContextMenu>
            </Button.ContextMenu>
          </Button>

          <Button
            ToolTip="Delete resource"
            Command="{Binding delete_resource_command}"
            CommandParameter="{Binding edit_resource}"
            Style="{StaticResource toolbar_button_style}"
            ui:properties.Icon="{StaticResource delete_icon}"
            ui:properties.IconHot="{StaticResource delete_icon_hot}"
            ui:properties.IconGray="{StaticResource delete_icon_gray}" />

        </ToolBar>
      </ToolBarTray>

      <ListView x:Name="resource_list" Grid.Row="3" Margin="4" ItemsSource="{Binding edit_source.resources}" SelectedItem="{Binding edit_resource}" SelectionMode="Single">
        <ListView.Resources>
          <Style TargetType="ListViewItem">
            <EventSetter Event="MouseDoubleClick" Handler="resource_list_item_mouse_double_click" />
          </Style>
        </ListView.Resources>
        <ListView.View>
          <GridView AllowsColumnReorder="False">
            <GridViewColumn Header="Name" Width="200" DisplayMemberBinding="{Binding name}" />
            <GridViewColumn Header="Type" Width="75" DisplayMemberBinding="{Binding type_name}" />
            <GridViewColumn Header="Editing" Width="75" DisplayMemberBinding="{Binding editing}" />
          </GridView>
        </ListView.View>
      </ListView>
    </Grid>
    <Grid Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <ui:drag_items_control
          x:Name="tab_items"
          Grid.Row="0"
          Focusable="False"
          ItemsSource="{Binding edit_tabs}"
          ItemsPanel="{StaticResource TabItemsPanelTemplate}"
          ItemTemplate="{StaticResource TabItemTemplate}" />

      <ContentControl Grid.Row="1" Focusable="False" Content="{Binding active_edit_tab.root_element, FallbackValue={x:Null}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" />

    </Grid>
  </Grid>
</Window>
